source("~/padhai/extinction-therapy/github-repo/plotting/optimal_doses/D1-D2_space.R")
source("~/padhai/extinction-therapy/github-repo/plotting/optimal_doses/D1-D2_space.R")
source("~/padhai/extinction-therapy/github-repo/plotting/optimal_doses/D1-D2_space.R")
source("~/padhai/extinction-therapy/github-repo/plotting/optimal_doses/D1-D2_space.R")
suppressPackageStartupMessages({
library(dplyr)
library(reshape2)
library(tidyverse)
library(deSolve)
})
# Calculates extinction probabilities for a range of
# delta_1 and delta_2 values, for multiple switching points
# edit this block
#################################################################
# path relative to the working directory
main_dir <- "optimal_doses/data_cost_0" # for plots like Fig2A
# treatment level space
D1range <- seq(1,3,0.02) # delta_1, treatment level in E1
D2range <- seq(1,3,0.02) # delta_2, treatment level in E2
# step and max for range of N_tau values
step <- 4000
nmax <- 100000
#################################################################
# default parameters
ord <- 100 # order of initial population relative to 10^4
nr2 <- 1*ord # initial R2 population
nr1 <- 1*ord # initial R1 population
nr12 <- 0 # initial R12 population
ns <- 10000*ord # initial S population
N0 <- ns+nr1+nr2+nr12 # total initial population
K <- N0 # carrying capacity
p2 <- 0.25 # probability of mutating from S -> R2
p1 <- 0.25 # probability of mutating from S -> R1
mu <- 0.00001 # total mutation rate in E1
mu2 <- 0.00001 # total mutation rate in E2
a1 <- mu*p1
a2 <- mu*p2
a1_2 <- mu2*p1
a2_2 <- mu2*p2
b <- 1 # intrinsic birth rate (of S cells)
d <- 0.1 # intrinsic death rate
s <- b-d # growth rate of S cells
cost <- 0 # cost of resistance
r <- s-cost # growth rate of resistant cells (R1,R2,R12)
pi2 <- 1-exp(-2*(r)/(b + d - cost)) # establishment probability
# save parameters
params_filename <- "params.csv"
var_names <- ls()
variables_to_save <- c("b","d","cost","K","nr1","nr2","nr12","ns","N0","a1","a2","a1_2","a2_2","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = file.path(main_dir, params_filename), row.names = FALSE)
suppressPackageStartupMessages({
library(dplyr)
library(reshape2)
library(tidyverse)
library(deSolve)
})
# Calculates extinction probabilities for a range of
# delta_1 and delta_2 values, for multiple switching points
# edit this block
#################################################################
# path relative to the working directory
main_dir <- "optimal_doses/data_R2_0_cost_0" # for plots like Fig2A
# treatment level space
D1range <- seq(1,3,0.02) # delta_1, treatment level in E1
D2range <- seq(1,3,0.02) # delta_2, treatment level in E2
# step and max for range of N_tau values
step <- 4000
nmax <- 100000
#################################################################
# default parameters
ord <- 100 # order of initial population relative to 10^4
nr2 <- 0 # initial R2 population
nr1 <- 1*ord # initial R1 population
nr12 <- 0 # initial R12 population
ns <- 10000*ord # initial S population
N0 <- ns+nr1+nr2+nr12 # total initial population
K <- N0 # carrying capacity
p2 <- 0.25 # probability of mutating from S -> R2
p1 <- 0.25 # probability of mutating from S -> R1
mu <- 0.00001 # total mutation rate in E1
mu2 <- 0.00001 # total mutation rate in E2
a1 <- mu*p1
a2 <- mu*p2
a1_2 <- mu2*p1
a2_2 <- mu2*p2
b <- 1 # intrinsic birth rate (of S cells)
d <- 0.1 # intrinsic death rate
s <- b-d # growth rate of S cells
cost <- 0 # cost of resistance
r <- s-cost # growth rate of resistant cells (R1,R2,R12)
pi2 <- 1-exp(-2*(r)/(b + d - cost)) # establishment probability
# save parameters
params_filename <- "params.csv"
var_names <- ls()
variables_to_save <- c("b","d","cost","K","nr1","nr2","nr12","ns","N0","a1","a2","a1_2","a2_2","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = file.path(main_dir, params_filename), row.names = FALSE)
suppressPackageStartupMessages({
library(dplyr)
library(reshape2)
library(tidyverse)
library(deSolve)
})
# Calculates extinction probabilities for a range of
# delta_1 and delta_2 values, for multiple switching points
# edit this block
#################################################################
# path relative to the working directory
main_dir <- "optimal_doses/data_R2_0" # for plots like Fig2A
# treatment level space
D1range <- seq(1,3,0.02) # delta_1, treatment level in E1
D2range <- seq(1,3,0.02) # delta_2, treatment level in E2
# step and max for range of N_tau values
step <- 4000
nmax <- 100000
#################################################################
# default parameters
ord <- 100 # order of initial population relative to 10^4
nr2 <- 0 # initial R2 population
nr1 <- 1*ord # initial R1 population
nr12 <- 0 # initial R12 population
ns <- 10000*ord # initial S population
N0 <- ns+nr1+nr2+nr12 # total initial population
K <- N0 # carrying capacity
p2 <- 0.25 # probability of mutating from S -> R2
p1 <- 0.25 # probability of mutating from S -> R1
mu <- 0.00001 # total mutation rate in E1
mu2 <- 0.00001 # total mutation rate in E2
a1 <- mu*p1
a2 <- mu*p2
a1_2 <- mu2*p1
a2_2 <- mu2*p2
b <- 1 # intrinsic birth rate (of S cells)
d <- 0.1 # intrinsic death rate
s <- b-d # growth rate of S cells
cost <- 0.5 # cost of resistance
r <- s-cost # growth rate of resistant cells (R1,R2,R12)
pi2 <- 1-exp(-2*(r)/(b + d - cost)) # establishment probability
# save parameters
params_filename <- "params.csv"
var_names <- ls()
variables_to_save <- c("b","d","cost","K","nr1","nr2","nr12","ns","N0","a1","a2","a1_2","a2_2","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = file.path(main_dir, params_filename), row.names = FALSE)
cost <- read.csv(file=file.path(main_dir,"params.csv"))
View(cost)
# uncomment for b-d space plots
# brange <- seq(0,3,0.05)
# drange <- seq(0,3,0.05)
cost <- read.csv(file=file.path(main_dir,"params.csv"))$cost
# uncomment for b-d space plots
# brange <- seq(0,3,0.05)
# drange <- seq(0,3,0.05)
cost <- read.csv(file=file.path(main_dir,"params.csv"))$cost[1]
cost
cost+2
cost+5
brange <- seq(0,3,0.05)
drange <- seq(0,3,0.05)
cost <- read.csv(file=file.path(main_dir,"params.csv"))$cost[1]
grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1-cost)
View(grid_data)
brange <- seq(0,3,0.05)
drange <- seq(0,3,0.05)
cost <- read.csv(file=file.path(main_dir,"params.csv"))$cost[1]
grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*(1-cost))
View(grid_data)
suppressPackageStartupMessages({
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyverse)
library(latex2exp)
library(viridis)
library(metR)
})
# Extracts data and created heatmaps showing
# high extinction probability regions in the
# delta_1-dealta_2 space (uncommented) and the
# b-d space (commented)
# setting theme for plots
theme_set(theme_linedraw())
# edit this block
#################################################################
main_dir <- "optimal_doses/data_default"
#main_dir <- "b-d_space/data_default"
D1range <- seq(1,3,0.02)
D2range <- seq(1,3,0.02)
grid_data <- expand.grid(D1range, D2range)
# brange <- seq(0,3,0.05)
# drange <- seq(0,3,0.05)
# rel_cost <- read.csv(file=file.path(main_dir,"params.csv"))$rel_cost[1]
# grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*(1-rel_cost))
hp <- 0.8 # high probability threshold
#################################################################
before <- c()
after <- c()
optimal_ntaus <- c()
nmins <- c()
optimal_pes <- c()
maxtau_before <- c()
maxtau_after <- c()
ba_flags <- c()
j <- 100
D <- grid_data[j,1]
D1 <- grid_data[j,1]
D2 <- grid_data[j,2]
D1
D2
data_filename <- paste("D1",D1,"_D2",D2,".csv",sep = "")
data_filename
PE_data <- read.csv(file=file.path(main_dir,data_filename))
View(PE_data)
j <- 10
D1 <- grid_data[j,1]
D2 <- grid_data[j,2]
D1
D2
data_filename <- paste("D1",D1,"_D2",D2,".csv",sep = "")
PE_data <- read.csv(file=file.path(main_dir,data_filename))
View(PE_data)
# high extinction probabilities before N(min)
highs_before <- PE_data[which(PE_data$PE_before>hp),1]
highs_before
min_value <- ifelse(length(highs_before) == 0, 0, min(highs_before))
min_value
max_value <- ifelse(length(highs_before) == 0, 0, max(highs_before))
max_value
max(numeric(0))
min(numeric(0))
# high extinction probability range before N(min)
highs_before <- PE_data[which(PE_data$PE_before>hp),1]
min_value_before <- ifelse(length(highs_before) == 0, 0, min(highs_before))
max_value_before <- ifelse(length(highs_before) == 0, 0, max(highs_before))
high_range_before <- max_value_before - min_value_before
before <- c(before, high_range_before)
maxtau_before <- c(maxtau_before,max_value_before)
# high extinction probability range after N(min)
highs_after <- PE_data[which(PE_data$PE_after>hp),1]
min_value_after <- ifelse(length(highs_after) == 0, 0, min(highs_after))
max_value_after <- ifelse(length(highs_after) == 0, 0, max(highs_after))
high_range_after <- max_value_after - min_value_after
after <- c(after, high_range_after)
maxtau_after <- c(maxtau_after, max_value_after)
max_PE <- max(c(PE_data$PE_before, PE_data$PE_after))
max_PE
which(PE_data==max_PE, arr.ind = TRUE)
max_row <- which(PE_data==max_PE, arr.ind = TRUE)[1,1]
max_col <- which(PE_data==max_PE, arr.ind = TRUE)[1,2]
if(max_row==1){ba_flag=0}
else if(max_col==2){ba_flag=-1}
if(max_row==1){ba_flag=0}
else if(max_col==2){ba_flag=-1}
ba_flag <- ifelse(max_row==1,0, ifelse(max_col==2, -1, 1))
ba_flag
ba_flag+1
suppressPackageStartupMessages({
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyverse)
library(latex2exp)
library(viridis)
library(metR)
})
# Extracts data and created heatmaps showing
# high extinction probability regions in the
# delta_1-dealta_2 space (uncommented) and the
# b-d space (commented)
# setting theme for plots
theme_set(theme_linedraw())
# edit this block
#################################################################
main_dir <- "optimal_doses/data_default"
#main_dir <- "b-d_space/data_default"
D1range <- seq(1,3,0.02)
D2range <- seq(1,3,0.02)
grid_data <- expand.grid(D1range, D2range)
# brange <- seq(0,3,0.05)
# drange <- seq(0,3,0.05)
# rel_cost <- read.csv(file=file.path(main_dir,"params.csv"))$rel_cost[1]
# grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*(1-rel_cost))
hp <- 0.8 # high probability threshold
#################################################################
before <- c()
after <- c()
optimal_ntaus <- c()
nmins <- c()
optimal_pes <- c()
maxtau_before <- c()
maxtau_after <- c()
ba_flags <- c()
for(j in seq(nrow(grid_data))){
j <- 10
D1 <- grid_data[j,1]
D2 <- grid_data[j,2]
# b <- grid_data[j,1]
# d <- grid_data[j,2]
data_filename <- paste("D1",D1,"_D2",D2,".csv",sep = "")
# data_filename <- paste("b",b,"_d",d,".csv", sep = "")
PE_data <- read.csv(file=file.path(main_dir,data_filename))
# high extinction probability range before N(min)
highs_before <- PE_data[which(PE_data$PE_before>hp),1]
min_value_before <- ifelse(length(highs_before) == 0, 0, min(highs_before))
max_value_before <- ifelse(length(highs_before) == 0, 0, max(highs_before))
high_range_before <- max_value_before - min_value_before
before <- c(before, high_range_before)
maxtau_before <- c(maxtau_before,max_value_before)
# high extinction probability range after N(min)
highs_after <- PE_data[which(PE_data$PE_after>hp),1]
min_value_after <- ifelse(length(highs_after) == 0, 0, min(highs_after))
max_value_after <- ifelse(length(highs_after) == 0, 0, max(highs_after))
high_range_after <- max_value_after - min_value_after
after <- c(after, high_range_after)
maxtau_after <- c(maxtau_after, max_value_after)
# max extinction probability; ba_flag tells whether it lies
# before or after the nadir (0:at nadir, 1: after, -1:before)
max_PE <- max(c(PE_data$PE_before, PE_data$PE_after))
max_row <- which(PE_data==max_PE, arr.ind = TRUE)[1,1]
max_col <- which(PE_data==max_PE, arr.ind = TRUE)[1,2]
optimal_pes <- c(optimal_pes, max_PE)
ba_flag <- ifelse(max_row==1,0, ifelse(max_col==2, -1, 1))
ba_flags <- c(ba_flags, ba_flag)
# optimal switching point and N(min)
optimal_ntaus <- c(optimal_ntaus, PE_data$n_tau[max_row])
nmins <- c(nmins,PE_data[1,1])
}
data <- cbind(grid_data, before, after, optimal_ntaus, nmins, ba_flags, optimal_pes, maxtau_before, maxtau_after)
colnames(data)<- c("X","Y","PE_before","PE_after", "optimal_N_tau","N_min","ba_flag","PE_optimal","max_N_tau_before","max_N_tau_after")
write.csv(data, file = file.path(main_dir,"heatmap_data.csv"), row.names = FALSE)
View(data)
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
pdf(file=file.path(main_dir,"heatmap.pdf"), height=3, width = 3)
print(hpr_plot)
dev.off()
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
data <- cbind(grid_data, before, after, optimal_ntaus, nmins, ba_flags, optimal_pes, maxtau_before, maxtau_after)
colnames(data)<- c("X","Y","PE_before","PE_after", "optimal_N_tau","N_min","ba_flag","PE_optimal","max_N_tau_before","max_N_tau_after")
write.csv(data, file = file.path(plots_dir,output_file), row.names = FALSE)
# plotting high extinction probability region heatmap
data <- read.csv(file=file.path(plots_dir,output_file))
my_palette <- viridis_pal(option = "rocket")(12)
hpr_plot <- ggplot(data=data, aes(x=X,y=Y))+
geom_contour_filled(aes(z=PE_before),breaks=c(0,3000,7000,12000,16000))+
scale_fill_manual(values = my_palette[c(1,3,5,7,10,12)])+
# geom_line(aes(x=X, y=X*(1-rel_cost)))+ # where d=b-cost
# geom_line(aes(x=b, y=b-0.9), linetype=2)+ # where b-d=0.9
# ylim(c(0,1.5))+
geom_contour(aes(z=PE_optimal), col="white", breaks = c(0.9,0.94,0.96,0.98,0.99))+
# geom_contour(aes(z=optimal_N_tau), col="yellow", breaks = c(1000,5000,10000,35000,400000))+
labs(x=TeX("$delta_{1}$"), y=TeX("$delta_{2}$"))+
guides(fill = guide_legend(reverse = TRUE))+
theme(legend.title=element_blank(),
aspect.ratio = 1,
legend.text = element_blank(),
legend.position = "none",
legend.key.size = unit(0.8,"cm"),
text = element_text(size=rel(4.4)))
pdf(file=file.path(main_dir,plot_filename), height=3, width = 3)
print(hpr_plot)
dev.off()
pdf(file=file.path(plots_dir,plot_filename), height=3, width = 3)
print(hpr_plot)
dev.off()
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
# plotting high extinction probability region heatmap
data <- read.csv(file=file.path(plots_dir,output_file))
my_palette <- viridis_pal(option = "rocket")(12)
hpr_plot <- ggplot(data=data, aes(x=X,y=Y))+
geom_contour_filled(aes(z=PE_before),breaks=c(0,3000,7000,12000,16000))+
scale_fill_manual(values = my_palette[c(1,3,5,7,10,12)])+
######### edit this block for b-d space plots #############
# geom_line(aes(x=X, y=X*(1-rel_cost)))+ # where d=b-cost
# geom_line(aes(x=X, y=X-0.9), linetype=2)+ # where b-d=0.9
# ylim(c(0,1.5))+
###########################################################
geom_contour(aes(z=PE_optimal), col="white", breaks = c(0.9,0.94,0.96,0.98,0.99))+
# geom_contour(aes(z=optimal_N_tau), col="yellow", breaks = c(1000,5000,10000,35000,400000))+
labs(x=TeX("$delta_{1}$"), y=TeX("$delta_{2}$"))+
guides(fill = guide_legend(reverse = TRUE))+
theme(legend.title=element_blank(),
aspect.ratio = 1,
legend.text = element_blank(),
legend.position = "none",
legend.key.size = unit(0.8,"cm"),
text = element_text(size=rel(4.4)))
pdf(file=file.path(plots_dir,plot_filename), height=3, width = 3)
print(hpr_plot)
dev.off()
# plotting high extinction probability region heatmap
data <- read.csv(file=file.path(plots_dir,output_file))
my_palette <- viridis_pal(option = "rocket")(12)
hpr_plot <- ggplot(data=data, aes(x=X,y=Y))+
geom_contour_filled(aes(z=PE_before),breaks=c(0,3000,7000,12000,16000))+
scale_fill_manual(values = my_palette[c(1,3,5,7,10,12)])+
######### edit this block for b-d space plots #############
labs(x=TeX("$delta_{1}$"), y=TeX("$delta_{2}$"))+
# geom_line(aes(x=X, y=X*(1-rel_cost)))+ # where d=b-cost
# geom_line(aes(x=X, y=X-0.9), linetype=2)+ # where b-d=0.9
# ylim(c(0,1.5))+
###########################################################
geom_contour(aes(z=PE_optimal), col="white", breaks = c(0.9,0.94,0.96,0.98,0.99))+
# geom_contour(aes(z=optimal_N_tau), col="yellow", breaks = c(1000,5000,10000,35000,400000))+
guides(fill = guide_legend(reverse = TRUE))+
theme(legend.title=element_blank(),
aspect.ratio = 1,
legend.text = element_blank(),
legend.position = "none",
legend.key.size = unit(0.8,"cm"),
text = element_text(size=rel(4.4)))
pdf(file=file.path(plots_dir,plot_filename), height=3, width = 3)
print(hpr_plot)
dev.off()
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
plot_file <- "heatmap_default_before.pdf"
main_dir <- "optimal_doses/data_default/"
#main_dir <- "b-d_space/data_default"
plots_dir <- "optimal_doses/plots"
#main_dir <- "b-d_space/plots"
output_file <- "heatmap_data_default.csv"
plot_file <- "heatmap_default_before.pdf"
suppressPackageStartupMessages({
library(dplyr)
library(reshape2)
library(tidyverse)
library(deSolve)
})
# Calculates extinction probabilities for a range of
# delta_1 - delta_2 values (uncommented)
# and b - d values (commented)
# for multiple switching points (N(tau) values)
# edit this block
#################################################################
# path relative to the working directory
#main_dir <- "optimal_doses/data_default" # for plots like Fig2A
main_dir <- "b-d_space/data_default" # for plots like Fig3B
# parameter space
# D1range <- seq(1,3,0.02) # delta_1, treatment level in E1
# D2range <- seq(1,3,0.02) # delta_2, treatment level in E2
# grid_data <- expand.grid(D1range, D2range)
brange <- seq(0,3,0.05)
drange <- seq(0,3,0.05)
rel_cost <- 0.5 # cost of resistance relative to the birth rate (b)
grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*(1-rel_cost))
# step and max for range of N(tau) values
step <- 4000
nmax <- 100000
# step <- 10000
# nmax <- 500000
#################################################################
# default parameters
ord <- 100 # order of initial population relative to 10^4
nr2 <- 1*ord # initial R2 population
nr1 <- 1*ord # initial R1 population
nr12 <- 0 # initial R12 population
ns <- 10000*ord # initial S population
N0 <- ns+nr1+nr2+nr12 # total initial population
K <- N0 # carrying capacity
p2 <- 0.25 # probability of mutating from S -> R2
p1 <- 0.25 # probability of mutating from S -> R1
mu <- 0.00001 # total mutation rate in E1
mu2 <- 0.00001 # total mutation rate in E2
a1 <- mu*p1
a2 <- mu*p2
a1_2 <- mu2*p1
a2_2 <- mu2*p2
D1 <- 2 # treatment level in E1
D2 <- 2 # treatment level in E2
b <- 1 # intrinsic birth rate (of S cells)
d <- 0.1 # intrinsic death rate
s <- b-d # growth rate of S cells
cost <- 0.5 # cost of resistance
rel_cost <- cost/b
r <- s-cost # growth rate of resistant cells (R1,R2,R12)
pi2 <- 1-exp(-2*(r)/(b + d - cost)) # establishment probability
# save parameters
params_filename <- "params.csv"
var_names <- ls()
variables_to_save <- c("b","d","cost","rel_cost","K","D1","D2","nr1","nr2","nr12","ns","N0","a1","a2","a1_2","a2_2","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = file.path(main_dir, params_filename), row.names = FALSE)
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
View(PE_data)
data_filename
rel_cost
brange <- seq(0,3,0.05)
drange <- seq(0,3,0.05)
grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*0.5)
nrow(grid_data)
grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*(1-rel_cost))
nrow(grid_data)
View(grid_data)
grid_data <- expand.grid(brange, drange) %>% filter(Var2<=Var1*0.5)
seq(nrow(grid_data))
View(grid_data)
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
source("~/padhai/extinction-therapy/code/ET-new/plotting/b-d_space.R")
View(PE_data)
j <- 1
b <- grid_data[j,1]
d <- grid_data[j,2]
c <- b*0.5
s <- b-d
r <- s-c
pi2 <- 1-exp(-2*(r)/(b + d - c)) # establishment probability
source("~/padhai/extinction-therapy/github-repo/plotting/high_prob_regions.R")
