geom_line(data=PE_data[which(PE_data$n_tau>-1),],
aes(x=n_tau, y=PE), lwd=1, alpha=0.7)+
geom_vline(xintercept = nmin, lty=2, lwd=1.5, color='red', alpha=0.7)+
geom_text(x=40000, y=0.07, label=TeX("$N_{min}=1.35x10^{4}$"), size=9, col="red", family="URWHelvetica", face="plain")+
geom_hline(yintercept = 0, col='grey50')+
scale_x_continuous(limits = c(0, nmax), breaks = c(0, 0.5*nmax, nmax))+
scale_y_continuous(limits=c(0,1), breaks=c(0,0.5,1))+
theme(aspect.ratio = 1, legend.position = "",
text = element_text(size=rel(6)))
pdf(paste(dir,"EPplot_alt.pdf",sep = "/"), height = 5, width = 6)
print(epplot)
dev.off()
# plotting simulation data
epplot <- ggplot(data=data, aes(y=extinction))+
geom_point(aes(x=n_tau), size=3)+
#geom_vline(xintercept = maxn, lty=2,lwd=2,alpha=0.5)+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
text=element_text(size=rel(6)),
aspect.ratio = 1)+
labs(x=TeX(""), y=TeX(""))+
ylim(c(0,1))+
geom_errorbar(aes(x=n_tau, ymin = extinction - 1.96 * SE, ymax = extinction + 1.96 * SE)) # binommial proportion 95% confidence interval
epplot <- epplot+
geom_line(data=PE_data[which(PE_data$n_tau>-1),],
aes(x=n_tau, y=PE), lwd=1, alpha=0.7)+
geom_vline(xintercept = nmin, lty=2, lwd=1.5, color='red', alpha=0.7)+
geom_text(x=45000, y=0.07, label=TeX("$N_{min}=1.35x10^{4}$"), size=9, col="red", family="URWHelvetica", face="plain")+
geom_hline(yintercept = 0, col='grey50')+
scale_x_continuous(limits = c(0, nmax), breaks = c(0, 0.5*nmax, nmax))+
scale_y_continuous(limits=c(0,1), breaks=c(0,0.5,1))+
theme(aspect.ratio = 1, legend.position = "",
text = element_text(size=rel(6)))
pdf(paste(dir,"EPplot_alt.pdf",sep = "/"), height = 5, width = 6)
print(epplot)
dev.off()
source("~/padhai/thesis/code/ET-new/plotting/analytical.R", echo=TRUE)
# plotting simulation data
epplot <- ggplot(data=data, aes(y=extinction))+
geom_point(aes(x=n_tau), size=3)+
#geom_vline(xintercept = maxn, lty=2,lwd=2,alpha=0.5)+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
text=element_text(size=rel(6)),
aspect.ratio = 1)+
labs(x=TeX(""), y=TeX(""))+
ylim(c(0,1))+
geom_errorbar(aes(x=n_tau, ymin = extinction - 1.96 * SE, ymax = extinction + 1.96 * SE)) # binommial proportion 95% confidence interval
epplot <- epplot+
geom_line(data=PE_data[which(PE_data$n_tau>-1),],
aes(x=n_tau, y=PE), lwd=1, alpha=0.7)+
geom_vline(xintercept = nmin, lty=2, lwd=1.5, color='red', alpha=0.7)+
geom_text(x=30000, y=0.05, label=TeX("$N_{min}=1474.7$"), size=9, col="red", family="URWHelvetica", face="plain")+
geom_hline(yintercept = 0, col='grey50')+
scale_x_continuous(limits = c(0, nmax), breaks = c(0, 0.5*nmax, nmax))+
scale_y_continuous(limits=c(0,1), breaks=c(0,0.5,1))+
theme(aspect.ratio = 1, legend.position = "",
text = element_text(size=rel(6)))
pdf(paste(dir,"EPplot_alt.pdf",sep = "/"), height = 5, width = 6)
print(epplot)
dev.off()
# plotting simulation data
epplot <- ggplot(data=data, aes(y=extinction))+
geom_point(aes(x=n_tau), size=3)+
#geom_vline(xintercept = maxn, lty=2,lwd=2,alpha=0.5)+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
text=element_text(size=rel(6)),
aspect.ratio = 1)+
labs(x=TeX(""), y=TeX(""))+
ylim(c(0,1))+
geom_errorbar(aes(x=n_tau, ymin = extinction - 1.96 * SE, ymax = extinction + 1.96 * SE)) # binommial proportion 95% confidence interval
epplot <- epplot+
geom_line(data=PE_data[which(PE_data$n_tau>-1),],
aes(x=n_tau, y=PE), lwd=1, alpha=0.7)+
geom_vline(xintercept = nmin, lty=2, lwd=1.5, color='red', alpha=0.7)+
geom_text(x=28000, y=0.05, label=TeX("$N_{min}=1474.7$"), size=9, col="red", family="URWHelvetica", face="plain")+
geom_hline(yintercept = 0, col='grey50')+
scale_x_continuous(limits = c(0, nmax), breaks = c(0, 0.5*nmax, nmax))+
scale_y_continuous(limits=c(0,1), breaks=c(0,0.5,1))+
theme(aspect.ratio = 1, legend.position = "",
text = element_text(size=rel(6)))
pdf(paste(dir,"EPplot_alt.pdf",sep = "/"), height = 5, width = 6)
print(epplot)
dev.off()
# plotting simulation data
epplot <- ggplot(data=data, aes(y=extinction))+
geom_point(aes(x=n_tau), size=3)+
#geom_vline(xintercept = maxn, lty=2,lwd=2,alpha=0.5)+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
text=element_text(size=rel(6)),
aspect.ratio = 1)+
labs(x=TeX(""), y=TeX(""))+
ylim(c(0,1))+
geom_errorbar(aes(x=n_tau, ymin = extinction - 1.96 * SE, ymax = extinction + 1.96 * SE)) # binommial proportion 95% confidence interval
epplot <- epplot+
geom_line(data=PE_data[which(PE_data$n_tau>-1),],
aes(x=n_tau, y=PE), lwd=1, alpha=0.7)+
geom_vline(xintercept = nmin, lty=2, lwd=1.5, color='red', alpha=0.7)+
geom_text(x=29000, y=0.05, label=TeX("$N_{min}=1474.7$"), size=9, col="red", family="URWHelvetica", face="plain")+
geom_hline(yintercept = 0, col='grey50')+
scale_x_continuous(limits = c(0, nmax), breaks = c(0, 0.5*nmax, nmax))+
scale_y_continuous(limits=c(0,1), breaks=c(0,0.5,1))+
theme(aspect.ratio = 1, legend.position = "",
text = element_text(size=rel(6)))
pdf(paste(dir,"EPplot_alt.pdf",sep = "/"), height = 5, width = 6)
print(epplot)
dev.off()
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
avg_nmin
source("~/.active-rstudio-document", echo=TRUE)
print(avg_nmin)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# analytical curve
ord <- 100 # order of initial population relative to 10^4
nr2 <- 1*ord
nr1 <- 1*ord
nr12 <- 0
ns <- 10000*ord
N0 <- ns+nr1+nr2+nr12
K <- N0
p2 <- 0.25 # probability of mutating from S --> R2
p1 <- 0.25 # probability of mutating from S --> R1
mu <- 0.00001
mu2 <- 0.00001
a1 <- mu*p1
a2 <- mu*p2
a1_2 <- mu2*p1
a2_2 <- mu2*p2
D <- 2.0 # treatment level
D2 <- D
b <- 1 # intrinsic birth rate
d <- 0.1 # intrinsic death rate
s <- b-d
c <- 0.5 # cost of resistance
r <- s-c
pi2 <- 1-exp(-2*(r)/(b + d - c)) # establishment probability
pi2
my_palette <- viridis_pal(option = "rocket")(12)
suppressPackageStartupMessages({
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyverse)
library(latex2exp)
library(deSolve)
library(viridis)
})
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=nauc_inv, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
suppressPackageStartupMessages({
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyverse)
library(latex2exp)
library(deSolve)
library(viridis)
})
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=nauc_inv, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
suppressPackageStartupMessages({
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyverse)
library(latex2exp)
library(deSolve)
library(viridis)
library(metR)
})
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_mids.pdf", height=3, width = 3)
print(tp)
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
# geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
#                   colour="black",
#                   nudge_y=-0.04,
#                   nudge_x=0.05,
#                   skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_mids.pdf", height=3, width = 3)
print(tp)
dev.off()
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_mids.pdf", height=3, width = 3)
print(tp)
rlang::last_trace()
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
data <- data %>% filter(mid>0)
data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_mids.pdf", height=3, width = 3)
print(tp)
dev.off()
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
data <- data %>% filter(mid>0)
data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
colour="black",
#nudge_y=-0.04,
#nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_mids.pdf", height=3, width = 3)
print(tp)
dev.off()
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
data <- data %>% filter(mid>0)
data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=mid))+
scale_fill_manual(values = my_palette)+
# geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
#                   colour="black",
#                   #nudge_y=-0.04,
#                   #nudge_x=0.05,
#                   skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_mids.pdf", height=3, width = 3)
print(tp)
dev.off()
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
data <- data %>% filter(N_0.5>0)
data$N_0.5 <- data$N_0.5/N0
#data <- data %>% filter(mid>0)
#data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=N_0.5))+
scale_fill_manual(values = my_palette)+
# geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
#                   colour="black",
#                   #nudge_y=-0.04,
#                   #nudge_x=0.05,
#                   skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_N_0.5.pdf", height=3, width = 3)
print(tp)
dev.off()
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
data <- data %>% filter(N_0.5>0)
data$N_0.5 <- data$N_0.5/N0
#data <- data %>% filter(mid>0)
#data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=N_0.5))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=mid, fontface="bold"),
colour="black",
#nudge_y=-0.04,
#nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_N_0.5.pdf", height=3, width = 3)
print(tp)
theme_set(theme_linedraw())
data <- read.csv(file="b-d_space/b-d_space_alldata.csv")
data <- data %>% filter(N_0.5>0)
data$N_0.5 <- data$N_0.5/N0
#data <- data %>% filter(mid>0)
#data$mid <- data$mid/N0
tp <- ggplot(data=data, aes(x=b,y=d))+
geom_contour_filled(aes(z=N_0.5))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=b, y=d, z=N_0.5, fontface="bold"),
colour="black",
#nudge_y=-0.04,
#nudge_x=0.05,
skip=1)+
geom_line(aes(x=b, y=0.5*b))+
geom_line(aes(x=b, y=b-0.9), lty=2)+
ylim(c(0,1.5))+
labs(x=TeX(""), y=TeX(""))+
theme(legend.position = "none",
text = element_text(size=rel(4.6)))
pdf(file="b-d_space/b-d_space_N_0.5.pdf", height=3, width = 3)
print(tp)
dev.off()
theme_set(theme_linedraw())
suppressPackageStartupMessages({
library(ggplot2)
library(dplyr)
library(reshape2)
library(tidyverse)
library(latex2exp)
library(deSolve)
library(viridis)
})
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="D1-D2_space/D1-D2_space_nauc_inv.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=D1,y=D2))+
geom_contour_filled(aes(z=nauc_inv))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=D1, y=D2, z=nauc_inv, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=D1, y=D1))+
#ylim(c(0,1.5))+
labs(x=TeX("$delta_{1}$"), y=TeX("$delta_{2}$"))+
theme(legend.position = "none",
text = element_text(size=rel(3)))
library(metR)
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="D1-D2_space/D1-D2_space_nauc_inv.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=D1,y=D2))+
geom_contour_filled(aes(z=nauc_inv))+
scale_fill_manual(values = my_palette)+
geom_text_contour(aes(x=D1, y=D2, z=nauc_inv, fontface="bold"),
colour="black",
nudge_y=-0.04,
nudge_x=0.05,
skip=1)+
geom_line(aes(x=D1, y=D1))+
#ylim(c(0,1.5))+
labs(x=TeX("$delta_{1}$"), y=TeX("$delta_{2}$"))+
theme(legend.position = "none",
text = element_text(size=rel(3)))
pdf(file="D1-D2_space/D1-D2_space_nauc_inv.pdf", height=3, width = 3)
print(tp)
dev.off()
my_palette <- viridis_pal(option = "rocket")(12)
theme_set(theme_linedraw())
data <- read.csv(file="D1-D2_space/D1-D2_space_nauc_inv.csv")
#data <- data %>% filter(N_0.5>0)
#data$N_0.5 <- data$N_0.5/N0
tp <- ggplot(data=data, aes(x=D1,y=D2))+
geom_contour_filled(aes(z=nauc_inv))+
scale_fill_manual(values = my_palette)+
# geom_text_contour(aes(x=D1, y=D2, z=nauc_inv, fontface="bold"),
#                   colour="black",
#                   nudge_y=-0.04,
#                   nudge_x=0.05,
#                   skip=1)+
geom_line(aes(x=D1, y=D1))+
#ylim(c(0,1.5))+
labs(x=TeX("$delta_{1}$"), y=TeX("$delta_{2}$"))+
theme(legend.position = "none",
text = element_text(size=rel(3.7)))
pdf(file="D1-D2_space/D1-D2_space_nauc_inv.pdf", height=3, width = 3)
print(tp)
dev.off()
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
source("~/padhai/thesis/code/ET-new/plotting/seedsim_analysis.R", echo=TRUE)
