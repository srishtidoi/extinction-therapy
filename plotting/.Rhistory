source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
clones
View(clones)
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/plotting.R")
source("~/padhai/thesis/main/branching.R")
install.packages("stringi")
library(rlang)
## change the relevant parameters here
ord <- 100 # order of initial population relative to 10^4
nr2 <- 1*ord # initial R_2 population
nr1 <- 1*ord # initial R_1 population
nr12 <- 0 # initial R_1,2 population
ns <- 10000*ord # initial S population
N0 <- ns+nr1+nr2+nr12
K <- N0 # carrying capacity
p2 <- 0.25 # probability of mutating from S --> R2 (given mutation occurs)
p1 <- 0.25 # probability of mutating from S --> R1 (given mutation occurs)
mu <- 0.00001 # total mutation probability in E_1
mu2 <- 0.00001 # total mutation probability in E_2
a1 <- mu*p1
a2 <- mu*p2
a1_2 <- mu2*p1
a2_2 <- mu2*p2
D <- 2.0 # treatment level in E_1
D2 <- D # treatment level in E_2
b <- 1 # intrinsic birth rate
d <- 0.1 # intrinsic death rate
s <- b-d
cost <- 0.5 # cost of resistance
r <- s-cost
pi2 <- 1-exp(-2*(r)/(b + d - cost)) # establishment probability
param <- duplicate(b)
param
b
param <- 4
b
param <- duplicate(b, shallow = TRUE)
param
b
param <- 4
b
b <- 3
param
param <- quote(b)
param
b
param <- 4
b
param
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
b
update_original <- function(param){
# edit this line with the parameter to plot
b <<- param
}
update_original(5)
b
update_original(111)
b
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
PEs[which(PE>1)]=1
values[which(PE>1)]=1
PE_data <- cbind(grid_data,values)
colnames(PE_data) <- c("ntau", "param", "pe")
heatmap <- ggplot(data=PE_data)+
geom_contour_filled(aes(x=ntau, y=param, z=pe))+ # (***)
xlim(c(0,50000))+
#ylim(c(1, 3))+
xlab(TeX("$N(tau)$"))+
ylab(param_to_plot)+
theme(aspect.ratio = 1,
legend.position = "",
text=element_text(size = rel(5)),
panel.grid.major = element_blank())
var_names <- ls()
variables_to_save <- c("K","D","D2","cost","d","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = paste(dirname,"params.csv",sep="/"), row.names = FALSE)
write.csv(PE_data, file = paste(dirname,"out.csv",sep="/"), row.names = FALSE)
setwd("~/padhai/extinction-therapy/github-repo/plotting")
values[which(PE>1)]=1
PE_data <- cbind(grid_data,values)
colnames(PE_data) <- c("ntau", "param", "pe")
heatmap <- ggplot(data=PE_data)+
geom_contour_filled(aes(x=ntau, y=param, z=pe))+ # (***)
xlim(c(0,50000))+
#ylim(c(1, 3))+
xlab(TeX("$N(tau)$"))+
ylab(param_to_plot)+
theme(aspect.ratio = 1,
legend.position = "",
text=element_text(size = rel(5)),
panel.grid.major = element_blank())
var_names <- ls()
variables_to_save <- c("K","D","D2","cost","d","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = paste(dirname,"params.csv",sep="/"), row.names = FALSE)
write.csv(PE_data, file = paste(dirname,"out.csv",sep="/"), row.names = FALSE)
pdf(file = paste("analytical_heatmaps/plots/", plotname, sep = ""), width=6, height = 5)
print(heatmap)
dev.off()
values[which(PE>1)]=1
values
max(values)
values[which(values>1)]=1
max(values)
values[which(values>1)]=1
PE_data <- cbind(grid_data,values)
colnames(PE_data) <- c("ntau", "param", "pe")
heatmap <- ggplot(data=PE_data)+
geom_contour_filled(aes(x=ntau, y=param, z=pe))+ # (***)
xlim(c(0,50000))+
#ylim(c(1, 3))+
xlab(TeX("$N(tau)$"))+
ylab(param_to_plot)+
theme(aspect.ratio = 1,
legend.position = "",
text=element_text(size = rel(5)),
panel.grid.major = element_blank())
var_names <- ls()
variables_to_save <- c("K","D","D2","cost","d","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = paste(dirname,"params.csv",sep="/"), row.names = FALSE)
write.csv(PE_data, file = paste(dirname,"out.csv",sep="/"), row.names = FALSE)
pdf(file = paste("analytical_heatmaps/plots/", plotname, sep = ""), width=6, height = 5)
print(heatmap)
dev.off()
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
a <- N/A
a < NULL
a <- NULL
b
b==a
b!=a
b==c
b
c
b==K
source("~/padhai/extinction-therapy/github-repo/plotting/analytical_heatmaps/analytical_heatmap.R", echo=TRUE)
var_names <- ls()
variables_to_save <- c("b","D","D2","cost","d","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = paste(dirname,"params.csv",sep="/"), row.names = FALSE)
write.csv(var_data, file = paste(dirname,"params.csv",sep="/"), row.names = FALSE)
dirname
param_to_plot <- "carrying capacity"
dirname <- "analytical_heatmaps/data/heatmap_K"
plotname <- "heatmap_K.pdf"
var_names <- ls()
variables_to_save <- c("b","D","D2","cost","d","ord")  # add variables to save
variables_to_save <- intersect(variables_to_save, var_names)
var_data <- data.frame(t(sapply(variables_to_save, get)))
write.csv(var_data, file = paste(dirname,"params.csv",sep="/"), row.names = FALSE)
source("~/padhai/extinction-therapy/github-repo/plotting/thresholds.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/thresholds.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/Nq_plots/plotting_Nq.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/Nq_plots/plotting_Nq.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/Nq_plots/plotting_Nq.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/Nq_plots/plotting_Nq.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/Nq_plots/plotting_Nq.R", echo=TRUE)
source("~/padhai/extinction-therapy/github-repo/plotting/optimal_doses/D1-D2_space_metrics.R", echo=TRUE)
pdf(file="optimal_doses/plots/normalised_aucs.pdf", height=3, width = 3)
print(tp)
pdf(file="optimal_doses/plots/normalised_aucs.pdf", height=3, width = 3)
print(doseplot)
dev.off()
source("~/padhai/extinction-therapy/github-repo/plotting/b-d_space/b-d_space_metrics.R", echo=TRUE)
